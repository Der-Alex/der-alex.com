import{e as y,f as k,_ as b,g as s,h,c as r,a as u,t as m,w,v as N,i as x,j as v,k as S,l as T,p as C,d as M,o as d}from"./entry-bc8cabdd.mjs";const a=y({calculated:0,correct:0,wrong:0,num1:0,num2:0}),I=()=>{a.calculated++},j=()=>{a.correct++},B=()=>{a.wrong++},G=()=>(a.num1=Math.floor(Math.random()*10)+1,a.num1),K=()=>(a.num2=Math.floor(Math.random()*10)+1,a.num2),o={state:k(a),updateCalculated:I,updateCorrect:j,updateWrong:B,getNewNum1:G,getNewNum2:K};const V={setup(c,{expose:_}){_();let t=s(null),e=s(""),i=s(null),l=s(0),n=s(0);const f=()=>{o.updateCalculated(),console.log("checking",l.value,n.value,e.value,t.value),t.value=l.value*n.value===parseInt(e.value),t.value===!0&&o.updateCorrect(),t.value===!1&&o.updateWrong()};h(()=>{console.log("mounted"),console.log("input",i.value),l.value=o.getNewNum1(),n.value=o.getNewNum2(),setTimeout(()=>{i.value.focus()},50)});const p={check:t,res:e,input:i,num1:l,num2:n,checkCalcHandler:f,onMounted:h,ref:s,onRenderTriggered:S,onUpdated:T,score:o};return Object.defineProperty(p,"__isScriptSetup",{enumerable:!1,value:!0}),p}},g=c=>(C("data-v-0eb67db5"),c=c(),M(),c),D={class:"game"},H={class:"calculation"},O={class:"num num1"},U=g(()=>u("span",{class:"sign"},"x",-1)),W={class:"num num2"},z=g(()=>u("span",{class:"sign"},"=",-1)),E=["onKeyup"],P={key:1,class:"res"},R={key:2,class:"num success"},q={key:3,class:"num error"};function A(c,_,t,e,i,l){return d(),r("div",D,[u("div",H,[u("span",O,m(e.num1),1),U,u("span",W,m(e.num2),1),z]),e.check===null?w((d(),r("input",{key:0,class:"res input",type:"text",ref:"input",pattern:"[0-9]+","onUpdate:modelValue":_[0]||(_[0]=n=>e.res=n),onKeyup:x(e.checkCalcHandler,["enter"]),maxlength:"3"},null,40,E)),[[N,e.res]]):(d(),r("span",P,m(e.res.length>0?e.res:" "),1)),e.check?(d(),r("span",R,"\u2713")):v("",!0),e.check===!1?(d(),r("span",q,"\u2A2F ("+m(e.num1+" x "+e.num2+" = "+e.num1*e.num2)+")",1)):v("",!0)])}var F=b(V,[["render",A],["__scopeId","data-v-0eb67db5"]]),L=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:F});export{F as T,L as a,o as s};
